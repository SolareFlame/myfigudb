services:
  db:
    image: postgres:15
    container_name: myfigudb_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: myfigudb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - myfigudb_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: myfigudb_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@myfigudb.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db

  backend:
    build: ./server
    container_name: myfigudb_backend
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
    depends_on:
      - db
      - minio
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/myfigudb
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_BUCKET: figure-images
    networks:
      - myfigudb_network

  minio:
    image: minio/minio
    container_name: myfigudb_minio
    restart: always
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - myfigudb_network

  nginx:
    image: nginx:alpine
    container_name: myfigudb_nginx
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - certs:/etc/nginx/certs
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - minio
    networks:
      - myfigudb_network

volumes:
  pgdata:
  minio_data:
  certs:

networks:
  myfigudb_network:
